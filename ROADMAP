							-*-org-*-

Most of code example here : https://git.enlightenment.org/enlightenment
API documentation https://www.enlightenment.org/develop/api/start

* v1.0.0
** v0.1.0
*** v0.0.1
**** Handle translation using gettext
**** Maybe a latex-based rasterisation engine
**** Implement the scrapper
:LOGBOOK:
CLOCK: [2023-08-22 mar. 09:06]--[2023-08-22 mar. 09:24] =>  0:18
CLOCK: [2023-08-22 mar. 08:48]--[2023-08-22 mar. 09:05] =>  0:17
CLOCK: [2023-08-21 lun. 07:22]--[2023-08-21 lun. 07:46] =>  0:24
CLOCK: [2023-08-16 mer. 06:26]--[2023-08-16 mer. 06:52] =>  0:26
CLOCK: [2023-08-16 mer. 05:47]--[2023-08-16 mer. 06:13] =>  0:26
:END:
via unit tests
- [X] Implement scrapper_set_url
- [X] CMake should search for libcurl
  
- [-] Now, implement scrapper_run wich must return a 404 status code
  for a non existant domain/page
  - [X] First search for check
  - [ ] Then, use =curl_easy_perform= to retrieve HTTP status code

- [ ] If we run the main binary with an URL, we automatically scrap it
- [ ] Handle a argument to make the scrapper use multiple core at once  
- [ ] Get time of last modified of a web page from the HTTP header

- [ ] May return a scrapper_result struct with
  {HTTP status, title and markdown text}
  
**** May add a logger
:LOGBOOK:
CLOCK: [2023-09-08 ven. 12:37]--[2023-09-08 ven. 13:20] =>  0:43
CLOCK: [2023-09-08 ven. 10:59]--[2023-09-08 ven. 11:34] =>  0:35
CLOCK: [2023-09-08 ven. 09:20]--[2023-09-08 ven. 09:34] =>  0:14
CLOCK: [2023-09-08 ven. 08:01]--[2023-09-08 ven. 08:40] =>  0:39
:END:
- Handle log level (WARN INFO ERRO)
- Log file name
- And environment (PROD, TEST)
- Maybe intro with appname and version
  build date and GCC version
- [X] Check for file size to know if log was written in
- [X] Log level to str implementation
- [ ] Must also implement getter and setter
  Only an environment setter, because for file, it's more complicated
- [ ] May be overriden by environment variable
**** TODO Wotk on persistence
:LOGBOOK:
CLOCK: [2023-09-04 lun. 11:53]--[2023-09-04 lun. 12:14] =>  0:21
:END:
- persistence maybe through mongodb ? in persist.h/c
  Save full HTML or only AST representation

- [ ] Must be able to retrieve mongo URI, user and password
**** Work on doxygen API documentation
:LOGBOOK:
CLOCK: [2023-09-07 jeu. 07:30]--[2023-09-07 jeu. 07:58] =>  0:28
CLOCK: [2023-09-05 mar. 07:28]--[2023-09-05 mar. 07:47] =>  0:19
:END:
- [ ] Must add \file block for each header and implementation
**** TODO Add a config struct
:LOGBOOK:
CLOCK: [2023-09-07 jeu. 06:02]--[2023-09-07 jeu. 06:11] =>  0:09
CLOCK: [2023-09-05 mar. 08:30]--[2023-09-05 mar. 09:10] =>  0:40
CLOCK: [2023-09-05 mar. 07:13]--[2023-09-05 mar. 07:21] =>  0:08
CLOCK: [2023-09-05 mar. 06:21]--[2023-09-05 mar. 06:45] =>  0:24
CLOCK: [2023-08-21 lun. 04:06]--[2023-08-21 lun. 04:16] =>  0:10
CLOCK: [2023-08-18 ven. 05:53]--[2023-08-18 ven. 06:01] =>  0:08
CLOCK: [2023-08-18 ven. 05:10]--[2023-08-18 ven. 05:16] =>  0:06
CLOCK: [2023-08-17 jeu. 08:31]--[2023-08-17 jeu. 08:41] =>  0:10
CLOCK: [2023-08-17 jeu. 07:58]--[2023-08-17 jeu. 08:20] =>  0:22
CLOCK: [2023-08-14 lun. 05:32]--[2023-08-14 lun. 05:54] =>  0:22
CLOCK: [2023-08-14 lun. 05:04]--[2023-08-14 lun. 05:18] =>  0:14
CLOCK: [2023-08-14 lun. 02:47]--[2023-08-14 lun. 03:13] =>  0:26
:END:
And unit test this

- [X] Must fix ctor return value
- [X] Must have a basedir directory that return $HOME/.scrapper
- [X] How to deal with a generated 'config.h' from config.h.in file
  as we already have src/.h/c for the struct
  Maybe a underscore _config.h ? OK
- [X] basedir is part of the config struct
- [X] basedir_concat(filename) to get the name of the given file
  How to link this basedir with the Config struct ?
- [X] We now should be able to retrieve a filename in app's config dir
  To be able to unit test this, should have a final filename as param
  and add a tests/keys files to unit tests content
  - [X] Should also check with a null string as key
  - [X] Should take a Config*  param for basedir

- [ ] Must handle a key/value work
  as a $(configdir)/key-name file containing the value
**** [feature_UiBoxes ?] Retry to create UI with boxes in ui.h/.c
  see https://louis-du-verdier.developpez.com/efl/debuter/?page=elementary#LVIII-B

- [ ] URL is not completely shown : change entry width
  May try the wrap attribute

- [ ] Scrapper shouldn't scrap an empty URL : unit test

- [ ] Maybe create main UI with a conformant ?
  https://docs.tizen.org/application/native/guides/ui/efl/container-conformant/
- [ ] Add unit tests using check ?
  May add the `make check` rule and fix README

- [ ] May test memory leaks using valgrind

**** TODO Logger may handle vararg values in LOG* macros    
:LOGBOOK:
CLOCK: [2023-09-19 mar. 10:44]--[2023-09-19 mar. 11:05] =>  0:21
CLOCK: [2023-09-19 mar. 09:57]--[2023-09-19 mar. 10:16] =>  0:19
CLOCK: [2023-09-15 ven. 14:47]--[2023-09-15 ven. 15:00] =>  0:13
:END:
- [X] scrapper_url_is_valid function may use logger for output
  - [X] We now have segfault
- [X] We have the full path filename in logger, search for the cmake hack
  
- [ ] Log messages are printed while running unit tests
- [ ] In log file, each message has an extra EOL char
**** DONE Continue implementation
:LOGBOOK:
CLOCK: [2023-09-15 ven. 14:20]--[2023-09-15 ven. 14:39] =>  0:19
CLOCK: [2023-09-15 ven. 13:22]--[2023-09-15 ven. 13:53] =>  0:31
CLOCK: [2023-09-14 jeu. 13:03]--[2023-09-14 jeu. 13:09] =>  0:06
CLOCK: [2023-09-14 jeu. 11:50]--[2023-09-14 jeu. 12:37] =>  0:47
CLOCK: [2023-09-14 jeu. 11:28]--[2023-09-14 jeu. 11:43] =>  0:15
CLOCK: [2023-09-13 mer. 12:02]--[2023-09-13 mer. 12:21] =>  0:19
CLOCK: [2023-09-12 mar. 08:53]--[2023-09-12 mar. 09:21] =>  0:28
CLOCK: [2023-09-04 lun. 11:08]--[2023-09-04 lun. 11:40] =>  0:32
:END:
- [X] Fix actual edje file and add needed ui : CANCELED
  see https://louis-du-verdier.developpez.com/efl/debuter/?page=edje
  - [X] Can't find a text input widget
    Search in the ecrire package
    For example, in the open dialog, there's the 'Search/Rechercher' input
    https://github.com/Obsidian-StudiosInc/ecrire/blob/master/src/bin/ui/search_dialog.c
    or the find dialog
- [X] Should add a scrap result label below scrap button
  Added, now test it
- [X] Test URL in real time and print it in red if not an URL
  Using changed,user callback
  Trying https://curl.se/libcurl/c/curl_url_set.html
  - [X] scrapper_url_is_valid is implemented
  - [X] Print scrapper_url_is_valid result  
- [X] Make the main window resizable
  - [X] Create the ui from another function and move to ui.h/.c
    How to keep static object content ? wia static function ? =ui_get_url= ?
  - [X] The callback setup doesn't work
    *calling smart object API on non-smart object!*
  - [X] We have many =multiple declaration= errors, mays a macro error
  - [X] May have simpler ui getter and setter (url, status...)
    Comment widget getter in header and reimplement

**** DONE Correct project setup
:LOGBOOK:
CLOCK: [2023-08-31 jeu. 06:24]--[2023-08-31 jeu. 06:26] =>  0:02
CLOCK: [2023-08-21 lun. 04:21]--[2023-08-21 lun. 04:27] =>  0:06
CLOCK: [2023-08-03 jeu. 04:31]--[2023-08-03 jeu. 04:49] =>  0:18
:END:
- [X] Try to build a simple tutorial example
https://www.enlightenment.org/develop/efl/start
- [X] Should use cmake
- [X] We'll need the pcre2 library
- [X] Make this project public at github
- [X] Then configure github action to launch unit tests
  The simplest way to run test is =ctest= but it doesn't show the
  unit test output
**** DONE Implement first version
:LOGBOOK:
CLOCK: [2023-08-30 mer. 09:52]--[2023-08-30 mer. 10:02] =>  0:10
CLOCK: [2023-08-30 mer. 07:23]--[2023-08-30 mer. 07:57] =>  0:34
CLOCK: [2023-08-30 mer. 06:50]--[2023-08-30 mer. 07:06] =>  0:16
CLOCK: [2023-08-30 mer. 05:57]--[2023-08-30 mer. 06:15] =>  0:18
CLOCK: [2023-08-29 mar. 09:27]--[2023-08-29 mar. 10:21] =>  0:54
CLOCK: [2023-08-28 lun. 11:10]--[2023-08-28 lun. 11:22] =>  0:12
CLOCK: [2023-08-28 lun. 08:49]--[2023-08-28 lun. 09:10] =>  0:21
CLOCK: [2023-08-28 lun. 07:32]--[2023-08-28 lun. 08:26] =>  0:54
CLOCK: [2023-08-25 ven. 04:45]--[2023-08-25 ven. 05:14] =>  0:29
CLOCK: [2023-08-25 ven. 03:51]--[2023-08-25 ven. 04:17] =>  0:26
CLOCK: [2023-08-23 mer. 09:00]--[2023-08-23 mer. 09:16] =>  0:16
CLOCK: [2023-08-17 jeu. 06:34]--[2023-08-17 jeu. 07:20] =>  0:46
CLOCK: [2023-08-15 mar. 08:19]--[2023-08-15 mar. 08:43] =>  0:24
CLOCK: [2023-08-14 lun. 02:26]--[2023-08-14 lun. 02:46] =>  0:20
CLOCK: [2023-08-14 lun. 01:44]--[2023-08-14 lun. 01:59] =>  0:15
CLOCK: [2023-08-10 jeu. 06:18]--[2023-08-10 jeu. 06:29] =>  0:11
CLOCK: [2023-08-07 lun. 06:45]--[2023-08-07 lun. 07:32] =>  0:47
CLOCK: [2023-08-04 ven. 02:57]--[2023-08-04 ven. 03:24] =>  0:27
:END:
- [X] Find a usable licence compatible with libelementary
  Search in usable application (ecrire : GPLv3, edit etc...)
- [X] Add a lineedit and a 'Scrap' button
  Should we use a EDC file here ? yes, we have the edje_cc compiler
  see https://www.enlightenment.org/docs/themes/start
  - [X] handle edje_cc here it with cmake ?
    see https://github.com/Enlightenment/efl/blob/master/cmakeconfig/EdjeConfig.cmake.in
  - [X] Build UI with cmake
    To build it from build/ =edje_cc ../ui/main.edc main.edj=
    - [X] Add =add_custom_command= command in cmake script
    - [X] Make sure it works
- [X] Create our own gui without using edje
- [X] Trying to launch scrapping via elm ui
  - [X] Handle button click
  - [X] How to get input widget text ? Should be =elm_entry_entry_get=
    Trying to put a startup text to see the part name
    - [X] Maybe after getting the enry from the layout file ?
      Here the issue still
- [X] Maybe try http://www.enlightenment.org/about-enventor
  Trying enventor 1.0.0 from https://download.enlightenment.org/rel/apps/enventor/
  There is an issue when calling EOLIAN
- [X] May add an icon to scrap button
  see https://docs.enlightenment.org/elementary/1.15.0/button_example_01.html
